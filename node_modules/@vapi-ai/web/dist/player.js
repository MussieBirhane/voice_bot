"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContinuousPlayer = void 0;
const AtomicMediaSource_1 = __importDefault(require("./AtomicMediaSource"));
const events_1 = __importDefault(require("events"));
class ContinuousPlayer extends events_1.default {
    constructor() {
        super();
        this.audio = document.createElement("audio");
        this.audio.addEventListener("playing", () => this.emit("speech-start"));
        this.audio.addEventListener("play", () => this.emit("speech-start"));
        this.audio.addEventListener("canplay", () => {
            this.audio.play();
        });
        this.audio.addEventListener("waiting", () => this.emit("speech-end"));
        this.atomic = new AtomicMediaSource_1.default();
        this.audio.src = URL.createObjectURL(this.atomic.mediaSource);
        document.body.appendChild(this.audio);
    }
    start() {
        this.audio.play();
    }
    playChunk(audioData) {
        var _a;
        (_a = this.atomic.sourceBuffer) === null || _a === void 0 ? void 0 : _a.addEventListener("updateend", () => {
            this.audio.play().catch((error) => console.error("Play error:", error));
        }, { once: true });
        this.atomic.appendBuffer(audioData);
    }
    clear() {
        this.audio.pause();
        this.atomic.clearBuffer();
    }
}
exports.ContinuousPlayer = ContinuousPlayer;
